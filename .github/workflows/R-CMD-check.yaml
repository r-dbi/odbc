on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ubuntu-16.04

    services:
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
        ports:
        - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password12

    name: ${{ matrix.r }}

    strategy:
      fail-fast: false
      matrix:
        r: ['3.6']

    env:
      CRAN: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"
      ODBCSYSINI: ${{ github.workspace }}/.github/odbc

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r}}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r }}-${{ hashFiles('DESCRIPTION') }}

      - name: Install R system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages('remotes')" -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install PostgreSQL Driver
        run: |
          sudo apt-get install -y unixodbc-dev odbc-postgresql devscripts

      - name: Install SQL Server Driver
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
          apt-get update
          ACCEPT_EULA=Y apt-get install -y msodbcsql17
        shell: sudo bash {0}

      - name: Install dependencies
        run: |
          install.packages('remotes')
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran('rcmdcheck')
          remotes::install_github('jimhester/DBItest@bit64')
        shell: Rscript {0}

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'warning', check_dir = 'check')"
        env:
          LIB_DIR: /usr/lib/x86_64-linux-gnu/
          INCLUDE_DIR: /usr/include

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.r == '3.6'
        run: |
          Rscript -e 'remotes::install_github("r-lib/covr@gh-actions")'
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'

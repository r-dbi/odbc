on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

name: DBs (Linux)

jobs:
  database:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
        ports:
        - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password12

    env:
      CRAN: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"
      ODBCSYSINI: ${{ github.workspace }}/.github/odbc
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2

      - name: Install MySQL Driver
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE `test`;'
          sudo apt-get install -y odbc-mariadb
          echo "ODBC_CS_MYSQL=dsn=MySQL" >> $GITHUB_ENV

      - name: Install SQLite Driver
        run: |
          sudo apt-get install -y libsqliteodbc
          echo "ODBC_CS_SQLITE=dsn=SQLite" >> $GITHUB_ENV

      - name: Install PostgreSQL Driver
        run: |
          sudo apt-get install -y unixodbc-dev odbc-postgresql devscripts
          echo "ODBC_CS_POSTGRES=dsn=PostgreSQL" >> $GITHUB_ENV

      - name: Install SQL Server Driver
        run: |
          echo "ODBC_CS_SQLSERVER=dsn=MicrosoftSQLServer;UID=SA;PWD=Password12" >> $GITHUB_ENV
          sudo bash -c "
            curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
            && curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list \
            && apt-get update \
            && ACCEPT_EULA=Y apt-get install -y msodbcsql17 \
            && ln -s /opt/microsoft/msodbcsql17/lib64/libmsodbcsql-17.*.so.* /opt/microsoft/msodbcsql17/lib64/libmsodbcsql-17.so"

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          needs: check

      - name: Install locally to avoid error with test_local()
        run: |
          R CMD INSTALL .
        env:
          LIB_DIR: /usr/lib/x86_64-linux-gnu/
          INCLUDE_DIR: /usr/include

      - name: Test
        run: |
          testthat::test_local(reporter = testthat::ProgressReporter$new(max_failures = Inf, update_interval = Inf))
        shell: Rscript {0}

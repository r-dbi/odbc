% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi-connection.R, R/odbc-connection.R,
%   R/dbi-table.R
\docType{class}
\name{OdbcConnection-class}
\alias{OdbcConnection-class}
\alias{show,OdbcConnection-method}
\alias{dbIsValid,OdbcConnection-method}
\alias{dbDisconnect,OdbcConnection-method}
\alias{dbSendQuery,OdbcConnection,character-method}
\alias{dbExecute,OdbcConnection,character-method}
\alias{dbSendStatement,OdbcConnection,character-method}
\alias{dbDataType,OdbcConnection,ANY-method}
\alias{dbDataType,OdbcConnection,data.frame-method}
\alias{dbQuoteIdentifier,OdbcConnection,character-method}
\alias{dbQuoteIdentifier,OdbcConnection,SQL-method}
\alias{dbGetInfo,OdbcConnection-method}
\alias{dbGetQuery,OdbcConnection,character-method}
\alias{dbBegin,OdbcConnection-method}
\alias{dbCommit,OdbcConnection-method}
\alias{dbRollback,OdbcConnection-method}
\alias{OdbcConnection}
\alias{dbListFields,OdbcConnection,Id-method}
\alias{dbListFields,OdbcConnection,SQL-method}
\alias{dbListFields,OdbcConnection,character-method}
\alias{dbExistsTable,OdbcConnection,Id-method}
\alias{dbExistsTable,OdbcConnection,SQL-method}
\alias{dbExistsTable,OdbcConnection,character-method}
\alias{dbRemoveTable,OdbcConnection,character-method}
\title{Odbc Connection Methods}
\usage{
\S4method{show}{OdbcConnection}(object)

\S4method{dbIsValid}{OdbcConnection}(dbObj, ...)

\S4method{dbDisconnect}{OdbcConnection}(conn, ...)

\S4method{dbSendQuery}{OdbcConnection,character}(conn, statement, params = NULL, ..., immediate = FALSE)

\S4method{dbExecute}{OdbcConnection,character}(conn, statement, params = NULL, ..., immediate = is.null(params))

\S4method{dbSendStatement}{OdbcConnection,character}(conn, statement, params = NULL, ..., immediate = FALSE)

\S4method{dbDataType}{OdbcConnection,ANY}(dbObj, obj, ...)

\S4method{dbDataType}{OdbcConnection,data.frame}(dbObj, obj, ...)

\S4method{dbQuoteIdentifier}{OdbcConnection,character}(conn, x, ...)

\S4method{dbQuoteIdentifier}{OdbcConnection,SQL}(conn, x, ...)

\S4method{dbGetInfo}{OdbcConnection}(dbObj, ...)

\S4method{dbGetQuery}{OdbcConnection,character}(
  conn,
  statement,
  n = -1,
  params = NULL,
  immediate = is.null(params),
  ...
)

\S4method{dbBegin}{OdbcConnection}(conn, ...)

\S4method{dbCommit}{OdbcConnection}(conn, ...)

\S4method{dbRollback}{OdbcConnection}(conn, ...)

\S4method{dbListFields}{OdbcConnection,Id}(conn, name, ...)

\S4method{dbListFields}{OdbcConnection,SQL}(conn, name, ...)

\S4method{dbListFields}{OdbcConnection,character}(
  conn,
  name,
  catalog_name = NULL,
  schema_name = NULL,
  column_name = NULL,
  ...
)

\S4method{dbExistsTable}{OdbcConnection,Id}(conn, name, ...)

\S4method{dbExistsTable}{OdbcConnection,SQL}(conn, name, ...)

\S4method{dbExistsTable}{OdbcConnection,character}(conn, name, ...)

\S4method{dbRemoveTable}{OdbcConnection,character}(conn, name, ...)
}
\arguments{
\item{object}{Any R object}

\item{dbObj}{An object inheriting from \linkS4class{DBIObject},
i.e. \linkS4class{DBIDriver}, \linkS4class{DBIConnection},
or a \linkS4class{DBIResult}}

\item{...}{Other arguments to methods.}

\item{conn}{A \linkS4class{DBIConnection} object, as returned by
\code{\link[DBI:dbConnect]{dbConnect()}}.}

\item{statement}{a character string containing SQL.}

\item{params}{Query parameters to pass to \code{\link[=dbBind]{dbBind()}}.
See \code{\link[=dbBind]{dbBind()}} for details.}

\item{immediate}{If \code{TRUE}, SQLExecDirect will be used instead of
SQLPrepare, and the \code{params} argument is ignored}

\item{obj}{An R object whose SQL type we want to determine.}

\item{x}{A character vector, \link[DBI]{SQL} or \link[DBI]{Id} object to quote as identifier.}

\item{n}{maximum number of records to retrieve per fetch. Use \code{n = -1}
or \code{n = Inf}
to retrieve all pending records.  Some implementations may recognize other
special values.}

\item{name}{The table name, passed on to \code{\link[DBI:dbQuoteIdentifier]{dbQuoteIdentifier()}}. Options are:
\itemize{
\item a character string with the unquoted DBMS table name,
e.g. \code{"table_name"},
\item a call to \code{\link[DBI:Id]{Id()}} with components to the fully qualified table name,
e.g. \code{Id(schema = "my_schema", table = "table_name")}
\item a call to \code{\link[DBI:SQL]{SQL()}} with the quoted and fully qualified table name
given verbatim, e.g. \code{SQL('"my_schema"."table_name"')}
}}

\item{catalog_name}{Catalog where table is located.}

\item{schema_name}{Schema where table is located.}

\item{column_name}{The name of the column to return, the default returns all columns.}
}
\description{
Implementations of pure virtual functions defined in the \code{DBI} package
for OdbcConnection objects.
}
\keyword{internal}
